// Generated from DataLang.g4 by ANTLR 4.4
package DataLang.DataLang;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DataLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__5=1, T__4=2, T__3=3, T__2=4, T__1=5, T__0=6, PRINT=7, FOR=8, VECTOR=9, 
		MATRIX=10, STACK=11, NEW=12, PUSH=13, POP=14, INT_TYPE=15, BOOLEAN_TYPE=16, 
		STRING_TYPE=17, FLOAT_TYPE=18, DOUBLE_TYPE=19, INT32_TYPE=20, INT64_TYPE=21, 
		LONG_TYPE=22, IF=23, ELSE_IF=24, ELSE=25, TERNARY=26, ID=27, INT=28, FLOAT_LITERAL=29, 
		BOOLEAN_LITERAL=30, STRING_LITERAL=31, ADDITIVE_OPERATOR=32, MULTIPLICATIVE_OPERATOR=33, 
		MODULO=34, OPEN_BRACKET=35, CLOSE_BRACKET=36, OPEN_BRACE=37, CLOSE_BRACE=38, 
		OPEN_PAREN=39, CLOSE_PAREN=40, COMMA=41, ASSIGN=42, LOGICAL_AND=43, LOGICAL_OR=44, 
		LOGICAL_NOT=45, RELATIONAL_OPERATOR=46, EQUALITY_OPERATOR=47, SEMICOLON=48, 
		COLON=49, WS=50, DOT=51;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'"
	};
	public static final String[] ruleNames = {
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "PRINT", "FOR", "VECTOR", 
		"MATRIX", "STACK", "NEW", "PUSH", "POP", "INT_TYPE", "BOOLEAN_TYPE", "STRING_TYPE", 
		"FLOAT_TYPE", "DOUBLE_TYPE", "INT32_TYPE", "INT64_TYPE", "LONG_TYPE", 
		"IF", "ELSE_IF", "ELSE", "TERNARY", "ID", "INT", "FLOAT_LITERAL", "BOOLEAN_LITERAL", 
		"STRING_LITERAL", "ADDITIVE_OPERATOR", "MULTIPLICATIVE_OPERATOR", "MODULO", 
		"OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_BRACE", "CLOSE_BRACE", "OPEN_PAREN", 
		"CLOSE_PAREN", "COMMA", "ASSIGN", "LOGICAL_AND", "LOGICAL_OR", "LOGICAL_NOT", 
		"RELATIONAL_OPERATOR", "EQUALITY_OPERATOR", "SEMICOLON", "COLON", "WS", 
		"DOT"
	};


	public DataLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DataLang.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\65\u014d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7"+
		"\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32"+
		"\3\32\3\32\3\33\3\33\3\34\6\34\u00e6\n\34\r\34\16\34\u00e7\3\35\6\35\u00eb"+
		"\n\35\r\35\16\35\u00ec\3\36\6\36\u00f0\n\36\r\36\16\36\u00f1\3\36\3\36"+
		"\6\36\u00f6\n\36\r\36\16\36\u00f7\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		"\37\3\37\5\37\u0103\n\37\3 \3 \3 \3 \3 \3 \7 \u010b\n \f \16 \u010e\13"+
		" \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3"+
		"*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u0139\n"+
		"/\3\60\3\60\3\60\3\60\5\60\u013f\n\60\3\61\3\61\3\62\3\62\3\63\6\63\u0146"+
		"\n\63\r\63\16\63\u0147\3\63\3\63\3\64\3\64\2\2\65\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65\3\2\t\5\2\62;C\\c|\3\2\62;\4\2$"+
		"$^^\4\2--//\4\2,,\61\61\4\2>>@@\5\2\13\f\17\17\"\"\u0159\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5l\3\2\2\2\7o\3\2\2\2\tr\3\2\2\2\13"+
		"u\3\2\2\2\rw\3\2\2\2\17y\3\2\2\2\21\177\3\2\2\2\23\u0083\3\2\2\2\25\u008a"+
		"\3\2\2\2\27\u0091\3\2\2\2\31\u0097\3\2\2\2\33\u009b\3\2\2\2\35\u00a0\3"+
		"\2\2\2\37\u00a4\3\2\2\2!\u00a8\3\2\2\2#\u00b0\3\2\2\2%\u00b4\3\2\2\2\'"+
		"\u00ba\3\2\2\2)\u00c1\3\2\2\2+\u00c7\3\2\2\2-\u00cd\3\2\2\2/\u00d2\3\2"+
		"\2\2\61\u00d5\3\2\2\2\63\u00dd\3\2\2\2\65\u00e2\3\2\2\2\67\u00e5\3\2\2"+
		"\29\u00ea\3\2\2\2;\u00ef\3\2\2\2=\u0102\3\2\2\2?\u0104\3\2\2\2A\u0111"+
		"\3\2\2\2C\u0113\3\2\2\2E\u0115\3\2\2\2G\u0117\3\2\2\2I\u0119\3\2\2\2K"+
		"\u011b\3\2\2\2M\u011d\3\2\2\2O\u011f\3\2\2\2Q\u0121\3\2\2\2S\u0123\3\2"+
		"\2\2U\u0125\3\2\2\2W\u0127\3\2\2\2Y\u012a\3\2\2\2[\u012d\3\2\2\2]\u0138"+
		"\3\2\2\2_\u013e\3\2\2\2a\u0140\3\2\2\2c\u0142\3\2\2\2e\u0145\3\2\2\2g"+
		"\u014b\3\2\2\2ij\7>\2\2jk\7?\2\2k\4\3\2\2\2lm\7#\2\2mn\7?\2\2n\6\3\2\2"+
		"\2op\7@\2\2pq\7?\2\2q\b\3\2\2\2rs\7?\2\2st\7?\2\2t\n\3\2\2\2uv\7>\2\2"+
		"v\f\3\2\2\2wx\7@\2\2x\16\3\2\2\2yz\7r\2\2z{\7t\2\2{|\7k\2\2|}\7p\2\2}"+
		"~\7v\2\2~\20\3\2\2\2\177\u0080\7h\2\2\u0080\u0081\7q\2\2\u0081\u0082\7"+
		"t\2\2\u0082\22\3\2\2\2\u0083\u0084\7x\2\2\u0084\u0085\7g\2\2\u0085\u0086"+
		"\7e\2\2\u0086\u0087\7v\2\2\u0087\u0088\7q\2\2\u0088\u0089\7t\2\2\u0089"+
		"\24\3\2\2\2\u008a\u008b\7o\2\2\u008b\u008c\7c\2\2\u008c\u008d\7v\2\2\u008d"+
		"\u008e\7t\2\2\u008e\u008f\7k\2\2\u008f\u0090\7z\2\2\u0090\26\3\2\2\2\u0091"+
		"\u0092\7u\2\2\u0092\u0093\7v\2\2\u0093\u0094\7c\2\2\u0094\u0095\7e\2\2"+
		"\u0095\u0096\7m\2\2\u0096\30\3\2\2\2\u0097\u0098\7p\2\2\u0098\u0099\7"+
		"g\2\2\u0099\u009a\7y\2\2\u009a\32\3\2\2\2\u009b\u009c\7r\2\2\u009c\u009d"+
		"\7w\2\2\u009d\u009e\7u\2\2\u009e\u009f\7j\2\2\u009f\34\3\2\2\2\u00a0\u00a1"+
		"\7r\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3\7r\2\2\u00a3\36\3\2\2\2\u00a4\u00a5"+
		"\7k\2\2\u00a5\u00a6\7p\2\2\u00a6\u00a7\7v\2\2\u00a7 \3\2\2\2\u00a8\u00a9"+
		"\7d\2\2\u00a9\u00aa\7q\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac\7n\2\2\u00ac"+
		"\u00ad\7g\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af\7p\2\2\u00af\"\3\2\2\2\u00b0"+
		"\u00b1\7u\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7t\2\2\u00b3$\3\2\2\2\u00b4"+
		"\u00b5\7h\2\2\u00b5\u00b6\7n\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7c\2\2"+
		"\u00b8\u00b9\7v\2\2\u00b9&\3\2\2\2\u00ba\u00bb\7f\2\2\u00bb\u00bc\7q\2"+
		"\2\u00bc\u00bd\7w\2\2\u00bd\u00be\7d\2\2\u00be\u00bf\7n\2\2\u00bf\u00c0"+
		"\7g\2\2\u00c0(\3\2\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4"+
		"\7v\2\2\u00c4\u00c5\7\65\2\2\u00c5\u00c6\7\64\2\2\u00c6*\3\2\2\2\u00c7"+
		"\u00c8\7k\2\2\u00c8\u00c9\7p\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\78\2\2"+
		"\u00cb\u00cc\7\66\2\2\u00cc,\3\2\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7"+
		"q\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7i\2\2\u00d1.\3\2\2\2\u00d2\u00d3"+
		"\7k\2\2\u00d3\u00d4\7h\2\2\u00d4\60\3\2\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7"+
		"\7n\2\2\u00d7\u00d8\7u\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7\"\2\2\u00da"+
		"\u00db\7k\2\2\u00db\u00dc\7h\2\2\u00dc\62\3\2\2\2\u00dd\u00de\7g\2\2\u00de"+
		"\u00df\7n\2\2\u00df\u00e0\7u\2\2\u00e0\u00e1\7g\2\2\u00e1\64\3\2\2\2\u00e2"+
		"\u00e3\7A\2\2\u00e3\66\3\2\2\2\u00e4\u00e6\t\2\2\2\u00e5\u00e4\3\2\2\2"+
		"\u00e6\u00e7\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e88\3"+
		"\2\2\2\u00e9\u00eb\t\3\2\2\u00ea\u00e9\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec"+
		"\u00ea\3\2\2\2\u00ec\u00ed\3\2\2\2\u00ed:\3\2\2\2\u00ee\u00f0\t\3\2\2"+
		"\u00ef\u00ee\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1\u00f2"+
		"\3\2\2\2\u00f2\u00f3\3\2\2\2\u00f3\u00f5\7\60\2\2\u00f4\u00f6\t\3\2\2"+
		"\u00f5\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f7\u00f8"+
		"\3\2\2\2\u00f8<\3\2\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7t\2\2\u00fb\u00fc"+
		"\7w\2\2\u00fc\u0103\7g\2\2\u00fd\u00fe\7h\2\2\u00fe\u00ff\7c\2\2\u00ff"+
		"\u0100\7n\2\2\u0100\u0101\7u\2\2\u0101\u0103\7g\2\2\u0102\u00f9\3\2\2"+
		"\2\u0102\u00fd\3\2\2\2\u0103>\3\2\2\2\u0104\u010c\7$\2\2\u0105\u010b\n"+
		"\4\2\2\u0106\u0107\7^\2\2\u0107\u0108\7^\2\2\u0108\u0109\3\2\2\2\u0109"+
		"\u010b\13\2\2\2\u010a\u0105\3\2\2\2\u010a\u0106\3\2\2\2\u010b\u010e\3"+
		"\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010f\3\2\2\2\u010e"+
		"\u010c\3\2\2\2\u010f\u0110\7$\2\2\u0110@\3\2\2\2\u0111\u0112\t\5\2\2\u0112"+
		"B\3\2\2\2\u0113\u0114\t\6\2\2\u0114D\3\2\2\2\u0115\u0116\7\'\2\2\u0116"+
		"F\3\2\2\2\u0117\u0118\7]\2\2\u0118H\3\2\2\2\u0119\u011a\7_\2\2\u011aJ"+
		"\3\2\2\2\u011b\u011c\7}\2\2\u011cL\3\2\2\2\u011d\u011e\7\177\2\2\u011e"+
		"N\3\2\2\2\u011f\u0120\7*\2\2\u0120P\3\2\2\2\u0121\u0122\7+\2\2\u0122R"+
		"\3\2\2\2\u0123\u0124\7.\2\2\u0124T\3\2\2\2\u0125\u0126\7?\2\2\u0126V\3"+
		"\2\2\2\u0127\u0128\7(\2\2\u0128\u0129\7(\2\2\u0129X\3\2\2\2\u012a\u012b"+
		"\7~\2\2\u012b\u012c\7~\2\2\u012cZ\3\2\2\2\u012d\u012e\7#\2\2\u012e\\\3"+
		"\2\2\2\u012f\u0139\t\7\2\2\u0130\u0131\7@\2\2\u0131\u0139\7?\2\2\u0132"+
		"\u0133\7>\2\2\u0133\u0139\7?\2\2\u0134\u0135\7?\2\2\u0135\u0139\7?\2\2"+
		"\u0136\u0137\7#\2\2\u0137\u0139\7?\2\2\u0138\u012f\3\2\2\2\u0138\u0130"+
		"\3\2\2\2\u0138\u0132\3\2\2\2\u0138\u0134\3\2\2\2\u0138\u0136\3\2\2\2\u0139"+
		"^\3\2\2\2\u013a\u013b\7?\2\2\u013b\u013f\7?\2\2\u013c\u013d\7#\2\2\u013d"+
		"\u013f\7?\2\2\u013e\u013a\3\2\2\2\u013e\u013c\3\2\2\2\u013f`\3\2\2\2\u0140"+
		"\u0141\7=\2\2\u0141b\3\2\2\2\u0142\u0143\7<\2\2\u0143d\3\2\2\2\u0144\u0146"+
		"\t\b\2\2\u0145\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147"+
		"\u0148\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u014a\b\63\2\2\u014af\3\2\2\2"+
		"\u014b\u014c\7\60\2\2\u014ch\3\2\2\2\r\2\u00e7\u00ec\u00f1\u00f7\u0102"+
		"\u010a\u010c\u0138\u013e\u0147\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}